一元运算符：作用于一个运算对象的运算符
二元运算符：作用于两个运算对象的运算符
三元运算符：作用于三个运算对象的运算符

1.重载运算符
C++语言定义了运算符作用于内置类型和复合类型的运算对象执行的操作
当运算符作用域类类型的运算对象时,用户可以自定义其含义
这种自定义的过程是为已存在的运算符赋予了另外一层含义,所以称为重载运算符.
重载运算符时,可以改变的是运算对象的类型和返回值的类型.运算对象的个数、运算符的优先级和结合律都是无法改变的
左值和右值
2.优先级和结合律
  括号无视优先级与结合律
！C++11新标准规定商一律向0取整.
3.算术运算符
  m%(-n)=m%n;
  (-m)%n=-(m%n);
4.逻辑和关系运算符
  !、<、<=、>、>=、==、!=、&&、||
  短路求值
  先求左侧运算对象的值,再求右侧运算对象的值.
5.赋值运算符
  赋值运算符的左侧运算对象必须是可修改的左值.
  赋值运算满足右结合律.
  赋值运算符优先级较低.
6.递增和递减运算符
  ++和--;
  ++i;i++;
  --i;i--;
  解引用和递增运算符
  *pbeg++等价于*(pbeg++)
  *beg=toupper(*beg++);出错//赋值语句未定义
7.成员访问运算符
  点运算符和箭头运算符.
  ptr->mem等价于(*ptr).mem;
8.条件运算符
  cond?expr1:expr2;
9.位运算符
  ~、<<、>>、&、^、|
  符号位怎么处理没有明确的规定,所以建议位运算符用于处理无符号类型.
10.sizeof运算符
  sizeof运算符返回一条表达式或者类型名字所占的字节数
  C++11新标准允许我们使用作用域运算符来获取类成员的大小.
11.类型转换
  (1)隐式转换
  int ival=3.541+3;
  3变成3.0 右边是6.541,然后转为int,是6;
  (2)显式转换
  命名的强制类型转换
  cast-name<type>(expression);
  cast-name是static_cast、dynamic_cast、const_cast和reinterpret_cast.
  static_cast:
  只要不包含底层const,都可以使用static_cast.
  //通过强制类型转换以执行浮点数除法
  double slope = static_cast<double>(j)/i;
  const_cast:
  只能改变运算对象的底层const
  
  
  
