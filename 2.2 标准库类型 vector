vector表示对象的集合,引用不行.
集合中的每个对象都有一个与之对应的索引,索引用于访问对象. vector常被称作容器
使用vector之前,必须包含适当的头文件.
c++语言既有类模板,也有函数模板.vector是一个类模板.
需要提供额外信息来指定模板到底实例化成什么样的类.
如vector<int> ivec;vector是模板而非类型.
！C++11新标准规定,如果vector的元素还是vector的话,以前需要在>>之间加空格> >,C++11规定不需要了.
1.定义和初始化vector对象
  vector<int> ivec;
  vector<int> ivec2(ivec);
  vector<int> ivec3=ivec;
  vector<string> svec(ivec2); //错误,svec的元素是string对象.
  (1)列表初始化vector
  C++11新标准提供的列表初始化,用花括号括起来的初始元素值被赋给vector对象.
  vector<string> v1{"a","an","the"};
  (2)创建指定数量的元素
  vector<int> ivec(10,-1);
  (3)值初始化
  vector<int> ivec(10);
  10个元素被默认初始化.
  vector<string> v7{10};//v7有10个默认初始化的元素.
  vector<string> v7{10,"hi"};
2.向vector对象中添加元素
  push_back向vector对象中添加元素,添加到vector对象的尾端.
  开始的时候创建空的vector对象,在运行时再动态添加元素.
  ！如果循环体内部包含有向vector对象添加元素的语句,则不能使用范围for循环.
3.其他vector操作
  除了push_back之外
  v.empty();
  v.size();
  v.push_back();
  v[n];
  v1=v2;
  v1={a,b,c...};
  v1==v2;
  v1!=v2;
  <,<=,>,>=;
  不能用下标形式添加元素.
  尽可能使用范围for语句可以确保下标合法.
  
  
